input= information put in 
output= information put out 


Print

print("Hello World")

print("Hello", end='')
print("World")
#prints Hello World as one line

print("Hi ", end='Rose')
print(", how are you?")
#prints: Hi Rose, how are you?, separated as /Hi /Rose/, how are you?

.py should be the file type for python 
python is an interpreted language

python shells can be used to run/ test your code

#This is a one-line comment

'''
This is a multiple line comment
The marks are single quotes
'''

Variables
variables can be named with letters and _, are case sensitive 

my_variable = "Hello World"
print(my_variable)

python does not use the var keyword

string_variable = "letters and symbols"
#strings always have quotes

boolean_variable = True
print(boolean_variable)
#booleans are either True or False (must be capitalized)

integer_variable = 50
#numbers without decimals, if you use comma it will register as a set of numbers

float_variable = 5.05
#numbers with decimals

my_variable="float",3,9.9,True
print(my_variable)
#all variables can be used alongside eachother so long as the function allows it

Arithmetic Operators
a=3
print(type(a))
a=str(a)
print(type(a))
print(a)

b="3"
print(a+ int(b))

strings can be added too, just like ints and floats
int+float=float 

a = 10
b = True
c = a - b
print(c)

output of 9 becuase true registers as 1 and false as 0

a = 25
b =5.1
print(a / b)
print(a//b)
#always rounds down

a =2
b ="Hi "
print (a * b)
#print(ab) doesnt work

a =4**2
print(a) 
#dont exponent a negative number
square_root =25**.5
print(square_root) 

PEMDAS

modulo = 5 % 2
print(modulo)

whole = 63
divider = 5
division = 63//5
remainder = 63 % 5
print(division)
print(remainder)
#negative whole returns negative division, positive remainder
#negative divider returns both negative 


Boolean Operators

a = True
b = 1
print(a == b) 

a = 5
b = 1
print(a != b)

a = 9
b = 17
print(a > b)

a = True
b = False
print(a > b)

a=True
b=True
c=False
d=False
print(a and b)
print(a and b and c)
print(a and b and a and b)
print(a or b)
print(a or c)
print(c or d)
print(a or c or d)

print(not True)

#Short Circuting- if Python knows something will be true before finishing, it wont finish 

>>> print("hi"bob")
  File "<stdin>", line 1
    print("hi"bob")
                 ^
SyntaxError: unterminated string literal (detected at line 1)
>>> print("hi\"bob")
hi"bob
>>>
The \ will cancel the 1st ", its an escape

>>> print("hi\bob")
hob
>>>HAHAHA

anyways 
use use end=' ' for any special characters

teacher_name = "xi chen"

Use Type Cast to change type of variable 

# Converts a string to an integer
var1 = int("123")
var2 = 100
print(var1 + var2) 

>>> first_name =bool(first_name)
>>> print(first_name)
True
>>>

Input function
>>> first = input("first name")
first nameRose
>>> print(first)
Rose
>>>
#defaults to string 

>>> numone =input()
6
>>> numtwo = input()
3
>>> numone + numtwo
'63'
>>> numone = int(numone)
>>> numtwo = int(numtwo)
>>> numone + numtwo
9
>>>#typecasting, ie 2

cs + string("1400")

Design:Yondu Udonta





























